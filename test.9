#!/bin/bash
#
# students must NOT change this file in any way!!!
PATH=/bin:/usr/bin
TEST=$0

# I need this routine
cat > tmp.stat << 'END'
#!/bin/sh
PATH=/bin:/usr/bin
for FILE in $*; do
        /bin/echo "`ls -l $FILE | colrm 11` `wc $FILE | awk '{printf(\"%6s %6s %6s %s\n\", $1, $2, $3, $4);}'`"
done       
END
chmod a+rx tmp.stat

# this is the input lines to use
cat > $0.input << 'END'
echo STARTING

echo "Pipe test"

echo "if you don't implement pipes, then you need good messages saying so!"

echo "Quick dictionary test!"
cat < /usr/share/dict/words | egrep '^[a-z]{20}$' | tr a-z A-Z  | grep UNCHAR

echo "This should run, but generate errors in the stderr log files"
cat /badfile1 2>tmp.e1 | cat /badfile2 2>tmp.e2 | cat /badfile3 2>tmp.e3
./tmp.stat tmp.e1 tmp.e2 tmp.e3

END

# this is the correct output
# this is the output they should create
cat > $TEST.correct << 'END'
STARTING
Pipe test
if you don't implement pipes, then you need good messages saying so!
Quick dictionary test!
UNCHARACTERISTICALLY
This should run, but generate errors in the stderr log files
-rw-r--r--      1      7     42 tmp.e1
-rw-r--r--      1      7     42 tmp.e2
-rw-r--r--      1      7     42 tmp.e3
END

# don't change anything else
echo "export PS1=''; ./bash < $0.input; exit" | script -q > /dev/null 2>&1
sed 's/\r//g' typescript | grep STARTING -A 100000 | awk '/exit/{exit} {print}' > $TEST.myoutput


if cmp -s $TEST.correct $TEST.myoutput; then
    echo "PASSES"; exit 0
else
    echo "FAILS"; 
    echo '==== output differences: < means the CORRECT output, > means YOUR output'
    diff $TEST.correct $TEST.myoutput
    exit 99
fi
