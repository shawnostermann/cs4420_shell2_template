#!/bin/bash
#
# students must NOT change this file in any way!!!
PATH=/bin:/usr/bin
TEST=$0

# I need this routine
cat > tmp.stat << 'END'
#!/bin/sh
PATH=/bin:/usr/bin
for FILE in $*; do
        /bin/echo "`ls -l $FILE | colrm 11` `wc $FILE | awk '{printf(\"%6s %6s %6s %s\n\", $1, $2, $3, $4);}'`"
done       
END
chmod a+rx tmp.stat

# this is the input lines to use
cat > $0.input << 'END'
echo STARTING

echo "Redirection test"

INFILE="tmp.stdin"
OUTFILE="tmp.stdout"
ERRFILE="tmp.stderr"
NEWFILE="tmp.newfile"
OUTAPPFILE="tmp.appfile"

rm -f $INFILE
/bin/echo "testing 1 2 3" > $INFILE
cat $INFILE
echo "Did it get created?"
ls $INFILE
echo "Did you use the correct permission bits (0644)?"
./tmp.stat $INFILE
echo "What's in it?"
cat < $INFILE

echo "This should fail - you can't read it"
touch tmp.secret
chmod 000 tmp.secret
cat < tmp.secret
cat > tmp.secret
cat >> tmp.secret
cat 2> tmp.secret
cat 2>> tmp.secret

echo "Test output append"
/bin/echo "append test line 1" > $OUTAPPFILE
./tmp.stat $OUTAPPFILE
/bin/echo "append test line 2" >> $OUTAPPFILE
/bin/echo "append test line 3" >> $OUTAPPFILE
/bin/echo "append test line 4" >> $OUTAPPFILE
echo "There should now be 4 lines"
./tmp.stat $OUTAPPFILE
cat $OUTAPPFILE

echo "Standard error test"
cat NOFILE > $OUTFILE 2> $ERRFILE
echo "Output file should be empty"
cat $OUTFILE
echo "Output file should have the error message"
cat $ERRFILE
echo "Did you use the correct permission bits (0644)?"
./tmp.stat $OUTFILE $ERRFILE

echo "testing input AND output"
cat < $INFILE > $NEWFILE
./tmp.stat $NEWFILE

echo "These should generate errors"
/bin/echo "should not run 1" < /notfile
/bin/echo "should not run 2" > /tmp
/bin/echo "should not run 3" < file1 < file2

END

# this is the correct output
# this is the output they should create
cat > $TEST.correct << 'END'
STARTING
Redirection test
testing 1 2 3
Did it get created?
tmp.stdin
Did you use the correct permission bits (0644)?
-rw-r--r--      1      4     14 tmp.stdin
What's in it?
testing 1 2 3
This should fail - you can't read it
tmp.secret: Permission denied
tmp.secret: Permission denied
tmp.secret: Permission denied
tmp.secret: Permission denied
tmp.secret: Permission denied
Test output append
-rw-r--r--      1      4     19 tmp.appfile
There should now be 4 lines
-rw-r--r--      4     16     76 tmp.appfile
append test line 1
append test line 2
append test line 3
append test line 4
Standard error test
Output file should be empty
Output file should have the error message
cat: NOFILE: No such file or directory
Did you use the correct permission bits (0644)?
-rw-r--r--      0      0      0 tmp.stdout
-rw-r--r--      1      7     39 tmp.stderr
testing input AND output
-rw-r--r--      1      4     14 tmp.newfile
These should generate errors
/notfile: No such file or directory
/tmp: Is a directory
illegal redirection
END

# don't change anything else
echo "export PS1=''; ./bash < $0.input; exit" | script -q > /dev/null 2>&1
sed 's/\r//g' typescript | grep STARTING -A 100000 | awk '/exit/{exit} {print}' > $TEST.myoutput


if cmp -s $TEST.correct $TEST.myoutput; then
    echo "PASSES"; exit 0
else
    echo "FAILS"; 
    echo '==== output differences: < means the CORRECT output, > means YOUR output'
    diff $TEST.correct $TEST.myoutput
    exit 99
fi
